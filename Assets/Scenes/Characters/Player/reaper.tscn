[gd_scene load_steps=4 format=3 uid="uid://blpfbw2bh3tb3"]

[ext_resource type="PackedScene" uid="uid://ce1ec8hhy7o6t" path="res://Assets/Models/Reaper/reaper.blend" id="1_hr4f0"]

[sub_resource type="Shader" id="Shader_nct6j"]
code = "shader_type spatial;
//Simple 3D shader to create a force-field effect inspired by Faultless Defense from Guilty Gear Xrd.
//In summary, it takes logic used for simple rim lighting and uses it to create the alpha instead.

render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;//depth_test_disable;
uniform vec4 albedo : source_color;
uniform vec4 emission_color : source_color;
uniform sampler2D texture_albedo : source_color;
uniform float emission_amount: hint_range(0.0, 16.0) = 5.0f; 
uniform float rim_steepness : hint_range(0.0f, 16.0f) = 3.0f; //higher values mean a smaller rim.
uniform vec3 uv_scale;
uniform vec3 uv_offset;


void vertex() {
	UV=UV*uv_scale.xy+uv_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	EMISSION = emission_color.rgb * emission_amount;
	float NdotV = dot(NORMAL, VIEW);
	float rim_light = pow(1.0 - NdotV, rim_steepness);
	ALPHA = rim_light * emission_color.a / PI;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_3st14"]
render_priority = 0
shader = SubResource("Shader_nct6j")
shader_parameter/albedo = Color(0.952941, 0.945098, 0.223529, 1)
shader_parameter/emission_amount = 11.4
shader_parameter/emission_color = Color(1, 0.960784, 0, 1)
shader_parameter/rim_steepness = 3.541
shader_parameter/uv_offset = null
shader_parameter/uv_scale = null

[node name="reaper" instance=ExtResource("1_hr4f0")]

[node name="Skeleton3D" parent="Armature" index="0"]
bones/0/position = Vector3(1.21501e-18, -0.00465723, -0.0109439)
bones/1/position = Vector3(0, 0.360742, 0)
bones/1/rotation = Quaternion(0, 0, 0, 1)
bones/2/rotation = Quaternion(-0.547728, 0.447207, 0.547728, 0.447207)
bones/3/rotation = Quaternion(-0.495315, 0.0385401, 0.0395457, 0.866957)
bones/4/rotation = Quaternion(-0.0534112, -0.0124363, -0.0791577, 0.995353)
bones/5/rotation = Quaternion(-0.59289, -0.385334, -0.59289, 0.385334)
bones/6/rotation = Quaternion(-0.545749, -0.109172, -0.150612, 0.817041)
bones/7/rotation = Quaternion(-0.0106686, -0.000150839, 0.333895, 0.94255)
bones/8/rotation = Quaternion(0.0481316, -5.17588e-26, -1.06874e-17, 0.998841)
bones/9/rotation = Quaternion(0.0882456, 1.03803e-25, -1.95945e-17, 0.996099)
bones/10/rotation = Quaternion(-0.12874, 0, 2.8586e-17, 0.991678)
bones/11/rotation = Quaternion(-1.17211e-08, -3.25793e-08, 0.869964, 0.493115)
bones/12/rotation = Quaternion(-2.79346e-08, -1.30383e-08, 0.266661, 0.96379)
bones/13/rotation = Quaternion(-9.60496e-09, 3.15046e-08, 0.100906, 0.994896)
bones/14/rotation = Quaternion(-0.000771101, 0.00129665, -0.877998, 0.478662)
bones/15/rotation = Quaternion(-1.79022e-05, 7.34087e-05, -0.224729, 0.974421)
bones/16/rotation = Quaternion(-7.08421e-09, -3.25417e-08, -0.0598653, 0.998206)

[node name="Body" parent="Armature/Skeleton3D" index="0"]
material_overlay = SubResource("ShaderMaterial_3st14")

[node name="AnimationPlayer" parent="." index="1"]
playback_default_blend_time = 0.25
