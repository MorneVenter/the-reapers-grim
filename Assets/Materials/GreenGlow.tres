[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://bi1c2bnjs33hm"]

[sub_resource type="Shader" id="Shader_nct6j"]
code = "shader_type spatial;
//Simple 3D shader to create a force-field effect inspired by Faultless Defense from Guilty Gear Xrd.
//In summary, it takes logic used for simple rim lighting and uses it to create the alpha instead.

render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;//depth_test_disable;
uniform vec4 albedo : source_color;
uniform vec4 emission_color : source_color;
uniform sampler2D texture_albedo : source_color;
uniform float emission_amount: hint_range(0.0, 16.0) = 5.0f; 
uniform float rim_steepness : hint_range(0.0f, 16.0f) = 3.0f; //higher values mean a smaller rim.
uniform vec3 uv_scale;
uniform vec3 uv_offset;


void vertex() {
	UV=UV*uv_scale.xy+uv_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	EMISSION = emission_color.rgb * emission_amount;
	float NdotV = dot(NORMAL, VIEW);
	float rim_light = pow(1.0 - NdotV, rim_steepness);
	ALPHA = rim_light * emission_color.a / PI;
}"

[resource]
render_priority = 0
shader = SubResource("Shader_nct6j")
shader_parameter/albedo = Color(0.952941, 0.945098, 0.223529, 1)
shader_parameter/emission_amount = 11.4
shader_parameter/emission_color = Color(1, 0.960784, 0, 1)
shader_parameter/rim_steepness = 3.541
shader_parameter/uv_offset = null
shader_parameter/uv_scale = null
